
struct PSInput
{
    float4 Pos   : SV_POSITION;
    float4 Color : COLOR0;
    float3 Norm : NORMAL0;
    float3 Uv : TEX_COORD;
    float3 TLP : NORMAL1;
    float3 TVP : NORMAL2;
    float3 TFP : NORMAL3;
    float3 lPos : POSITION1;
    float3 vPos : POSITION2;
    float3 lightProp : POSITION3;
    float3 fragPos : POSITION4;
    float3 lDiff : POSITION5;
    float3 lSpec : POSITION6;
    float3 localNormal : NORMAL4;
    float4 renderProps : POSITION7;
   // float3 Norm : NORMAL0;x
};

struct PSOutput
{
    float4 Color : SV_TARGET;
};

// Note that if separate shader objects are not supported (this is only the case for old GLES3.0 devices), vertex
// shader output variable name must match exactly the name of the pixel shader input variable.
// If the variable has structure type (like in this example), the structure declarations must also be identical.
void main(in  PSInput  PSIn,
    out PSOutput PSOut)
{

  

    PSOut.Color = float4(PSIn.fragPos,1.0);


}

//